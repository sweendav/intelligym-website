name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Create config file with environment variables
      run: |
        echo "=== DEBUGGING SECRETS ==="
        echo "Checking if SUPABASE_URL exists:"
        if [ -n "${{ secrets.SUPABASE_URL }}" ]; then
          echo "✅ SUPABASE_URL is set"
          echo "URL: ${{ secrets.SUPABASE_URL }}"
        else
          echo "❌ SUPABASE_URL is empty or not set"
        fi
        
        echo "Checking if SUPABASE_ANON_KEY exists:"
        if [ -n "${{ secrets.SUPABASE_ANON_KEY }}" ]; then
          echo "✅ SUPABASE_ANON_KEY is set"
          echo "Key length: ${#SUPABASE_ANON_KEY}"
        else
          echo "❌ SUPABASE_ANON_KEY is empty or not set"
        fi
        
        echo "=== CREATING CONFIG FILE ==="
        cat > config.local.js << EOF
        window.IntelliGymLocalConfig = {
          supabase: {
            url: '${{ secrets.SUPABASE_URL }}',
            anonKey: '${{ secrets.SUPABASE_ANON_KEY }}'
          },
          app: {
            name: 'IntelliGym',
            tagline: 'Your AI-Powered Workout Companion',
            domain: '${{ secrets.APP_DOMAIN || 'www.intelligym.app' }}',
            mobileAppScheme: 'intelligym://'
          },
          email: {
            redirectTo: '${{ secrets.EMAIL_REDIRECT_URL || 'https://www.intelligym.app' }}',
            resetPasswordRedirect: '${{ secrets.RESET_PASSWORD_REDIRECT_URL || 'https://www.intelligym.app/redirect.html' }}'
          }
        };
        EOF
        
        echo "✅ Config file created successfully"
        echo "📁 File size: $(wc -c < config.local.js) bytes"
        echo "📄 Config file contents (without keys):"
        cat config.local.js | sed 's/anonKey:.*/anonKey: [HIDDEN]/'
        
        echo "=== VERIFYING FILE ==="
        if [ -f config.local.js ]; then
          echo "✅ config.local.js exists"
          ls -la config.local.js
        else
          echo "❌ config.local.js was not created"
        fi
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        retention-days: 1
        
    - name: Verify files in artifact
      run: |
        echo "=== VERIFYING DEPLOYMENT FILES ==="
        echo "Files in current directory:"
        ls -la
        echo ""
        echo "Checking if config.local.js exists:"
        if [ -f config.local.js ]; then
          echo "✅ config.local.js exists in deployment directory"
          echo "File size: $(wc -c < config.local.js) bytes"
          echo "File permissions: $(ls -la config.local.js)"
          echo "File contents (first few lines):"
          head -5 config.local.js
        else
          echo "❌ config.local.js missing from deployment directory"
        fi
        
        echo ""
        echo "=== FINAL VERIFICATION ==="
        echo "All files being deployed:"
        find . -type f -name "*.js" -o -name "*.html" | sort
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 